{"version":3,"sources":["webpack:///../src/docs/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","useState","toggle","setToggle","onClick","a","isMDXComponent"],"mappings":"qQAUaA,G,UAAe,S,oMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,qBAAG,6BAAGC,WAAW,KAAQ,CACrB,KAAQ,2BADT,+BAGH,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,oNAAyNC,SAAO,GACjQL,QACAH,kBACAS,eACAC,qBAJiQ,gBAKjQV,IALiQ,EAMjQH,eANiQ,GAOhQO,QAAQ,eACV,WAAM,MACyBM,oBAAS,GAA9BC,EADJ,KACYC,EADZ,KAEH,OAAO,sBAAQC,QAAS,WACtBD,GAAU,SAAAE,GAAC,OAAKA,OAETH,EAAS,QAAU,qB,kMAQpCV,EAAWc,gBAAiB","file":"component---src-docs-index-mdx-fd2c7b263c126b76b2f2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/pudding-design/pudding-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { useState } from 'react';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://duckduckgo.com\"\n      }}>{`Link that opens in new tab`}</a></p>\n    <Playground __position={0} __code={'() => {\\n  const [toggle, setToggle] = useState(true)\\n  return (\\n    <button\\n      onClick={() => {\\n        setToggle(a => !a)\\n      }}\\n    >\\n      {toggle ? \\'Hello\\' : \\'Good bye\\'}\\n    </button>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useState,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const [toggle, setToggle] = useState(true);\n        return <button onClick={() => {\n          setToggle(a => !a);\n        }}>\n                {toggle ? 'Hello' : 'Good bye'}\n            </button>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}